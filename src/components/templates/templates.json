[
  {
    "source": {
      "name": "solana",
      "owner": "solana-developers",
      "repo": "solana-templates"
    },
    "description": "Next.js, Tailwind, gill (based on @solana/kit), Wallet UI",
    "keywords": [
      "gill",
      "nextjs",
      "react",
      "solana-kit",
      "tailwind",
      "typescript",
      "wallet-ui"
    ],
    "name": "template-next-tailwind",
    "path": "templates/template-next-tailwind",
    "readme": "<h1>template-next-tailwind</h1>\n<p>This is a Next.js app containing:</p>\n<ul>\n<li>Tailwind CSS setup for styling</li>\n<li>Useful wallet UI elements setup using <a href=\"https://gill.site/\">Gill</a></li>\n</ul>\n<h2>Getting Started</h2>\n<h3>Installation</h3>\n<h4>Download the template</h4>\n<pre><code class=\"language-shell\">pnpm create solana-dapp@latest -t gh:solana-developers/solana-templates/templates/template-next-tailwind\n</code></pre>\n<h4>Install Dependencies</h4>\n<pre><code class=\"language-shell\">pnpm install\n</code></pre>\n<h4>Start the web app</h4>\n<pre><code class=\"language-shell\">pnpm dev\n</code></pre>\n",
    "repoUrl": "https://github.com/solana-developers/solana-templates/tree/main/templates/template-next-tailwind"
  },
  {
    "source": {
      "name": "solana",
      "owner": "solana-developers",
      "repo": "solana-templates"
    },
    "description": "Next.js, Tailwind, basic Anchor example, gill (based on @solana/kit), Wallet UI",
    "keywords": [
      "anchor-basic",
      "gill",
      "nextjs",
      "react",
      "solana-kit",
      "tailwind",
      "typescript",
      "wallet-ui"
    ],
    "name": "template-next-tailwind-basic",
    "path": "templates/template-next-tailwind-basic",
    "readme": "<h1>template-next-tailwind-basic</h1>\n<p>This is a Next.js app containing:</p>\n<ul>\n<li>Tailwind CSS setup for styling</li>\n<li>Useful wallet UI elements setup using <a href=\"https://gill.site/\">Gill</a></li>\n<li>A basic Greeter Solana program written in Anchor</li>\n<li>UI components for interacting with the Greeter program</li>\n</ul>\n<h2>Getting Started</h2>\n<h3>Installation</h3>\n<h4>Download the template</h4>\n<pre><code class=\"language-shell\">pnpm create solana-dapp@latest -t gh:solana-developers/solana-templates/templates/template-next-tailwind-basic\n</code></pre>\n<h4>Install Dependencies</h4>\n<pre><code class=\"language-shell\">pnpm install\n</code></pre>\n<h2>Apps</h2>\n<h3>anchor</h3>\n<p>This is a Solana program written in Rust using the Anchor framework.</p>\n<h4>Commands</h4>\n<p>You can use any normal anchor commands. Either move to the <code>anchor</code> directory and run the <code>anchor</code> command or prefix the command with <code>pnpm</code>, eg: <code>pnpm anchor</code>.</p>\n<h4>Sync the program id:</h4>\n<p>Running this command will create a new keypair in the <code>anchor/target/deploy</code> directory and save the address to the Anchor config file and update the <code>declare_id!</code> macro in the <code>./src/lib.rs</code> file of the program. This will also update the constant in <code>anchor/src/basic-exports.ts</code> file.</p>\n<pre><code class=\"language-shell\">pnpm run setup\n</code></pre>\n<h4>Build the program:</h4>\n<pre><code class=\"language-shell\">pnpm anchor-build\n</code></pre>\n<h4>Start the test validator with the program deployed:</h4>\n<pre><code class=\"language-shell\">pnpm anchor-localnet\n</code></pre>\n<h4>Run the tests</h4>\n<pre><code class=\"language-shell\">pnpm anchor-test\n</code></pre>\n<h4>Deploy to Devnet</h4>\n<pre><code class=\"language-shell\">pnpm anchor deploy --provider.cluster devnet\n</code></pre>\n<h3>web</h3>\n<p>This is a React app that uses the Anchor generated client to interact with the Solana program.</p>\n<h4>Commands</h4>\n<p>Start the web app</p>\n<pre><code class=\"language-shell\">pnpm dev\n</code></pre>\n<p>Build the web app</p>\n<pre><code class=\"language-shell\">pnpm build\n</code></pre>\n",
    "repoUrl": "https://github.com/solana-developers/solana-templates/tree/main/templates/template-next-tailwind-basic"
  },
  {
    "source": {
      "name": "solana",
      "owner": "solana-developers",
      "repo": "solana-templates"
    },
    "description": "Next.js, Tailwind, Anchor Counter example, gill (based on @solana/kit), Wallet UI",
    "keywords": [
      "anchor-counter",
      "gill",
      "nextjs",
      "react",
      "solana-kit",
      "tailwind",
      "typescript",
      "wallet-ui"
    ],
    "name": "template-next-tailwind-counter",
    "path": "templates/template-next-tailwind-counter",
    "readme": "<h1>template-next-tailwind-counter</h1>\n<p>This is a Next.js app containing:</p>\n<ul>\n<li>Tailwind CSS setup for styling</li>\n<li>Useful wallet UI elements setup using <a href=\"https://gill.site/\">Gill</a></li>\n<li>A basic Counter Solana program written in Anchor</li>\n<li>UI components for interacting with the Counter program</li>\n</ul>\n<h2>Getting Started</h2>\n<h3>Installation</h3>\n<h4>Download the template</h4>\n<pre><code class=\"language-shell\">pnpm create solana-dapp@latest -t gh:solana-developers/solana-templates/templates/template-next-tailwind-counter\n</code></pre>\n<h4>Install Dependencies</h4>\n<pre><code class=\"language-shell\">pnpm install\n</code></pre>\n<h2>Apps</h2>\n<h3>anchor</h3>\n<p>This is a Solana program written in Rust using the Anchor framework.</p>\n<h4>Commands</h4>\n<p>You can use any normal anchor commands. Either move to the <code>anchor</code> directory and run the <code>anchor</code> command or prefix the command with <code>pnpm</code>, eg: <code>pnpm anchor</code>.</p>\n<h4>Sync the program id:</h4>\n<p>Running this command will create a new keypair in the <code>anchor/target/deploy</code> directory and save the address to the Anchor config file and update the <code>declare_id!</code> macro in the <code>./src/lib.rs</code> file of the program. This will also update the constant in the <code>anchor/src/counter-exports.ts</code> file.</p>\n<pre><code class=\"language-shell\">pnpm run setup\n</code></pre>\n<h4>Build the program:</h4>\n<pre><code class=\"language-shell\">pnpm anchor-build\n</code></pre>\n<h4>Start the test validator with the program deployed:</h4>\n<pre><code class=\"language-shell\">pnpm anchor-localnet\n</code></pre>\n<h4>Run the tests</h4>\n<pre><code class=\"language-shell\">pnpm anchor-test\n</code></pre>\n<h4>Deploy to Devnet</h4>\n<pre><code class=\"language-shell\">pnpm anchor deploy --provider.cluster devnet\n</code></pre>\n<h3>web</h3>\n<p>This is a React app that uses the Anchor generated client to interact with the Solana program.</p>\n<h4>Commands</h4>\n<p>Start the web app</p>\n<pre><code class=\"language-shell\">pnpm dev\n</code></pre>\n<p>Build the web app</p>\n<pre><code class=\"language-shell\">pnpm build\n</code></pre>\n",
    "repoUrl": "https://github.com/solana-developers/solana-templates/tree/main/templates/template-next-tailwind-counter"
  },
  {
    "source": {
      "name": "solana",
      "owner": "solana-developers",
      "repo": "solana-templates"
    },
    "description": "Node.js Express API with gill (based on @solana/kit)",
    "keywords": [
      "express",
      "gill",
      "node",
      "solana-kit"
    ],
    "name": "template-node-express",
    "path": "templates/template-node-express",
    "readme": "<h1>template-node-express</h1>\n<p>Simple node Express API that comes with <a href=\"https://github.com/solana-foundation/gill\">gill</a>\nbased on <a href=\"https://github.com/anza-xyz/kit\">@solana/kit</a>.</p>\n<h2>Getting started</h2>\n<p>Clone the repo:</p>\n<pre><code class=\"language-shell\">git clone https://github.com/solana-developers/solana-templates\ncd solana-templates/template-node-express\n</code></pre>\n<p>Install dependencies:</p>\n<pre><code class=\"language-shell\">pnpm install\n</code></pre>\n<p>Start the api:</p>\n<pre><code class=\"language-shell\">pnpm run dev\n</code></pre>\n<p>Build the api:</p>\n<pre><code class=\"language-shell\">pnpm run build\n</code></pre>\n<p>The artifacts will be in the <code>dist</code> directory. You can now run the api using <code>npm run start</code> or <code>node dist/index.js</code>.</p>\n<h2>Docker</h2>\n<p>Build the Docker image:</p>\n<pre><code class=\"language-shell\">pnpm run docker:build\n</code></pre>\n<p>Run the Docker image:</p>\n<pre><code class=\"language-shell\">pnpm run docker:run\n</code></pre>\n<h2>Environment variables</h2>\n<p>The following environment variables can be used to configure the API:</p>\n<ul>\n<li><code>SOLANA_RPC_ENDPOINT</code>: The Solana RPC endpoint to use. Defaults to <code>devnet</code>.</li>\n<li><code>SOLANA_SIGNER_PATH</code>: The path to the keypair signer file. Defaults to <code>./keypair-signer.json</code>.</li>\n<li><code>CORS_ORIGINS</code>: A comma-separated list of allowed origins for CORS. Defaults to <code>*</code>.</li>\n</ul>\n<h2>Examples (curl)</h2>\n<p>Below are some examples of how to use the API using <code>curl</code>. You can use <a href=\"https://jqlang.org/\">jq</a> to format the output.</p>\n<h3>Balance</h3>\n<p>This command will return the balance of the provided address.</p>\n<pre><code class=\"language-shell\">curl http://localhost:3000/balance/FeeSoLT7WdoZVXsBPSZc7WKEuhVDVA1TKrNQoHacvxYm\n</code></pre>\n<h3>Balance (signer)</h3>\n<p>This command will return the balance of the signer's address.</p>\n<pre><code class=\"language-shell\">curl http://localhost:3000/balance-signer\n</code></pre>\n<h3>Cluster</h3>\n<p>This command will return the cluster based on the genesis hash of the connected cluster.</p>\n<pre><code class=\"language-shell\">curl http://localhost:3000/cluster\n</code></pre>\n<h3>Latest blockhash</h3>\n<p>This command will return the latest blockhash of the connected cluster. It uses a cached blockhash if available.</p>\n<pre><code class=\"language-shell\">curl http://localhost:3000/latest-blockhash\n</code></pre>\n",
    "repoUrl": "https://github.com/solana-developers/solana-templates/tree/main/templates/template-node-express"
  },
  {
    "source": {
      "name": "solana",
      "owner": "solana-developers",
      "repo": "solana-templates"
    },
    "description": "Node.js script with gill (based on @solana/kit)",
    "keywords": [
      "gill",
      "node",
      "solana-kit"
    ],
    "name": "template-node-script",
    "path": "templates/template-node-script",
    "readme": "<h1>template-node-script</h1>\n<p>Simple node script that comes with <a href=\"https://github.com/solana-foundation/gill\">gill</a>\nbased on <a href=\"https://github.com/anza-xyz/kit\">@solana/kit</a>.</p>\n",
    "repoUrl": "https://github.com/solana-developers/solana-templates/tree/main/templates/template-node-script"
  },
  {
    "source": {
      "name": "solana",
      "owner": "solana-developers",
      "repo": "solana-templates"
    },
    "description": "React+Vite, Tailwind, gill (based on @solana/kit), Wallet UI",
    "keywords": [
      "gill",
      "react",
      "solana-kit",
      "tailwind",
      "typescript",
      "vite",
      "wallet-ui"
    ],
    "name": "template-react-vite-tailwind",
    "path": "templates/template-react-vite-tailwind",
    "readme": "<h1>template-react-vite-tailwind</h1>\n<p>This is a Vite app containing:</p>\n<ul>\n<li>Tailwind CSS setup for styling</li>\n<li>Useful wallet UI elements setup using <a href=\"https://gill.site/\">Gill</a></li>\n</ul>\n<h2>Getting Started</h2>\n<h3>Installation</h3>\n<h4>Download the template</h4>\n<pre><code class=\"language-shell\">pnpm create solana-dapp@latest -t gh:solana-developers/solana-templates/templates/template-react-vite-tailwind\n</code></pre>\n<h4>Install Dependencies</h4>\n<pre><code class=\"language-shell\">pnpm install\n</code></pre>\n<h3>Start the web app</h3>\n<pre><code class=\"language-shell\">pnpm dev\n</code></pre>\n",
    "repoUrl": "https://github.com/solana-developers/solana-templates/tree/main/templates/template-react-vite-tailwind"
  },
  {
    "source": {
      "name": "solana",
      "owner": "solana-developers",
      "repo": "solana-templates"
    },
    "description": "React+Vite, Tailwind, gill (based on @solana/kit), basic Anchor example, Wallet UI",
    "keywords": [
      "anchor-basic",
      "gill",
      "react",
      "solana-kit",
      "tailwind",
      "typescript",
      "vite",
      "wallet-ui"
    ],
    "name": "template-react-vite-tailwind",
    "path": "templates/template-react-vite-tailwind-basic",
    "readme": "<h1>template-react-vite-tailwind-basic</h1>\n<p>This is a Vite app containing:</p>\n<ul>\n<li>Tailwind CSS setup for styling</li>\n<li>Useful wallet UI elements setup using <a href=\"https://gill.site/\">Gill</a></li>\n<li>A basic Greeter Solana program written in Anchor</li>\n<li>UI components for interacting with the Greeter program using the Anchor generated client</li>\n</ul>\n<h2>Getting Started</h2>\n<h3>Installation</h3>\n<h4>Download the template</h4>\n<pre><code class=\"language-shell\">pnpm create solana-dapp@latest -t gh:solana-developers/solana-templates/templates/template-react-vite-tailwind-basic\n</code></pre>\n<h4>Install Dependencies</h4>\n<pre><code class=\"language-shell\">pnpm install\n</code></pre>\n<h2>Apps</h2>\n<h3>anchor</h3>\n<p>This is a Solana program written in Rust using the Anchor framework.</p>\n<h4>Commands</h4>\n<p>You can use any normal anchor commands. Either move to the <code>anchor</code> directory and run the <code>anchor</code> command or prefix the command with <code>pnpm</code>, eg: <code>pnpm anchor</code>.</p>\n<h4>Sync the program id:</h4>\n<p>Running this command will create a new keypair in the <code>anchor/target/deploy</code> directory and save the address to the Anchor config file and update the <code>declare_id!</code> macro in the <code>./src/lib.rs</code> file of the program. This will also update the constant in the <code>anchor/src/basic-exports.ts</code> file.</p>\n<pre><code class=\"language-shell\">pnpm run setup\n</code></pre>\n<pre><code class=\"language-shell\">pnpm anchor keys sync\n</code></pre>\n<h4>Build the program:</h4>\n<pre><code class=\"language-shell\">pnpm anchor-build\n</code></pre>\n<h4>Start the test validator with the program deployed:</h4>\n<pre><code class=\"language-shell\">pnpm anchor-localnet\n</code></pre>\n<h4>Run the tests</h4>\n<pre><code class=\"language-shell\">pnpm anchor-test\n</code></pre>\n<h4>Deploy to Devnet</h4>\n<pre><code class=\"language-shell\">pnpm anchor deploy --provider.cluster devnet\n</code></pre>\n<h3>web</h3>\n<p>This is a React app that uses the Anchor generated client to interact with the Solana program.</p>\n<h4>Commands</h4>\n<p>Start the web app</p>\n<pre><code class=\"language-shell\">pnpm dev\n</code></pre>\n<p>Build the web app</p>\n<pre><code class=\"language-shell\">pnpm build\n</code></pre>\n",
    "repoUrl": "https://github.com/solana-developers/solana-templates/tree/main/templates/template-react-vite-tailwind-basic"
  },
  {
    "source": {
      "name": "solana",
      "owner": "solana-developers",
      "repo": "solana-templates"
    },
    "description": "React+Vite, Tailwind, gill (based on @solana/kit), Anchor Counter example, Wallet UI",
    "keywords": [
      "anchor-counter",
      "gill",
      "react",
      "solana-kit",
      "tailwind",
      "typescript",
      "vite",
      "wallet-ui"
    ],
    "name": "template-react-vite-tailwind",
    "path": "templates/template-react-vite-tailwind-counter",
    "readme": "<h1>template-react-vite-tailwind-counter</h1>\n<p>This is a Vite app containing:</p>\n<ul>\n<li>Tailwind CSS setup for styling</li>\n<li>Useful wallet UI elements setup using <a href=\"https://gill.site/\">Gill</a></li>\n<li>A basic Counter Solana program written in Anchor</li>\n<li>UI components for interacting with the Counter program using the Anchor generated client</li>\n</ul>\n<h2>Getting Started</h2>\n<h3>Installation</h3>\n<h4>Download the template</h4>\n<pre><code class=\"language-shell\">pnpm create solana-dapp@latest -t gh:solana-developers/solana-templates/templates/template-react-vite-tailwind-counter\n</code></pre>\n<h4>Install Dependencies</h4>\n<pre><code class=\"language-shell\">pnpm install\n</code></pre>\n<h2>Apps</h2>\n<h3>anchor</h3>\n<p>This is a Solana program written in Rust using the Anchor framework.</p>\n<h4>Commands</h4>\n<p>You can use any normal anchor commands. Either move to the <code>anchor</code> directory and run the <code>anchor</code> command or prefix the command with <code>pnpm</code>, eg: <code>pnpm anchor</code>.</p>\n<h4>Sync the program id:</h4>\n<p>Running this command will create a new keypair in the <code>anchor/target/deploy</code> directory and save the address to the Anchor config file and update the <code>declare_id!</code> macro in the <code>./src/lib.rs</code> file of the program. This will also update the constant in the <code>anchor/src/counter-exports.ts</code> file.</p>\n<pre><code class=\"language-shell\">pnpm run setup\n</code></pre>\n<pre><code class=\"language-shell\">pnpm anchor keys sync\n</code></pre>\n<h4>Build the program:</h4>\n<pre><code class=\"language-shell\">pnpm anchor-build\n</code></pre>\n<h4>Start the test validator with the program deployed:</h4>\n<pre><code class=\"language-shell\">pnpm anchor-localnet\n</code></pre>\n<h4>Run the tests</h4>\n<pre><code class=\"language-shell\">pnpm anchor-test\n</code></pre>\n<h4>Deploy to Devnet</h4>\n<pre><code class=\"language-shell\">pnpm anchor deploy --provider.cluster devnet\n</code></pre>\n<h3>web</h3>\n<p>This is a React app that uses the Anchor generated client to interact with the Solana program.</p>\n<h4>Commands</h4>\n<p>Start the web app</p>\n<pre><code class=\"language-shell\">pnpm dev\n</code></pre>\n<p>Build the web app</p>\n<pre><code class=\"language-shell\">pnpm build\n</code></pre>\n",
    "repoUrl": "https://github.com/solana-developers/solana-templates/tree/main/templates/template-react-vite-tailwind-counter"
  },
  {
    "source": {
      "name": "solana",
      "owner": "solana-developers",
      "repo": "solana-templates"
    },
    "description": "Next.js, Tailwind, @solana/web3.js, Wallet Adapter",
    "keywords": [
      "legacy",
      "nextjs",
      "react",
      "solana-web3js",
      "tailwind",
      "typescript",
      "wallet-adapter"
    ],
    "name": "legacy-next-tailwind",
    "path": "legacy/legacy-next-tailwind",
    "readme": "<h1>legacy-next-tailwind</h1>\n<p>This is a Next.js app containing:</p>\n<ul>\n<li>Tailwind CSS setup for styling</li>\n<li>Useful wallet UI elements setup using <a href=\"https://www.npmjs.com/package/@solana/web3.js\">@solana/web3.js</a></li>\n</ul>\n<h2>Getting Started</h2>\n<h3>Installation</h3>\n<h4>Download the template</h4>\n<pre><code class=\"language-shell\">pnpm create solana-dapp@latest -t gh:solana-developers/solana-templates/legacy/legacy-next-tailwind\n</code></pre>\n<h4>Install Dependencies</h4>\n<pre><code class=\"language-shell\">pnpm install\n</code></pre>\n<h4>Start the web app</h4>\n<pre><code class=\"language-shell\">pnpm dev\n</code></pre>\n",
    "repoUrl": "https://github.com/solana-developers/solana-templates/tree/main/legacy/legacy-next-tailwind"
  },
  {
    "source": {
      "name": "solana",
      "owner": "solana-developers",
      "repo": "solana-templates"
    },
    "description": "Next.js, Tailwind, @solana/web3.js, Wallet Adapter, basic Anchor program",
    "keywords": [
      "anchor-basic",
      "legacy",
      "nextjs",
      "react",
      "solana-web3js",
      "tailwind",
      "typescript",
      "wallet-adapter"
    ],
    "name": "legacy-next-tailwind-basic",
    "path": "legacy/legacy-next-tailwind-basic",
    "readme": "<h1>legacy-next-tailwind-basic</h1>\n<p>This is a Next.js app containing:</p>\n<ul>\n<li>Tailwind CSS setup for styling</li>\n<li>Useful wallet UI elements setup using <a href=\"https://www.npmjs.com/package/@solana/web3.js\">@solana/web3.js</a></li>\n<li>A basic Greeter Solana program written in Anchor</li>\n<li>UI components for interacting with the Greeter program</li>\n</ul>\n<h2>Getting Started</h2>\n<h3>Installation</h3>\n<h4>Download the template</h4>\n<pre><code class=\"language-shell\">pnpm create solana-dapp@latest -t gh:solana-developers/solana-templates/legacy/legacy-next-tailwind-basic\n</code></pre>\n<h4>Install Dependencies</h4>\n<pre><code class=\"language-shell\">pnpm install\n</code></pre>\n<h2>Apps</h2>\n<h3>anchor</h3>\n<p>This is a Solana program written in Rust using the Anchor framework.</p>\n<h4>Commands</h4>\n<p>You can use any normal anchor commands. Either move to the <code>anchor</code> directory and run the <code>anchor</code> command or prefix the command with <code>pnpm</code>, eg: <code>pnpm anchor</code>.</p>\n<h4>Sync the program id:</h4>\n<p>Running this command will create a new keypair in the <code>anchor/target/deploy</code> directory and save the address to the Anchor config file and update the <code>declare_id!</code> macro in the <code>./src/lib.rs</code> file of the program.</p>\n<p>You will manually need to update the constant in <code>anchor/lib/counter-exports.ts</code> to match the new program id.</p>\n<pre><code class=\"language-shell\">pnpm anchor keys sync\n</code></pre>\n<h4>Build the program:</h4>\n<pre><code class=\"language-shell\">pnpm anchor-build\n</code></pre>\n<h4>Start the test validator with the program deployed:</h4>\n<pre><code class=\"language-shell\">pnpm anchor-localnet\n</code></pre>\n<h4>Run the tests</h4>\n<pre><code class=\"language-shell\">pnpm anchor-test\n</code></pre>\n<h4>Deploy to Devnet</h4>\n<pre><code class=\"language-shell\">pnpm anchor deploy --provider.cluster devnet\n</code></pre>\n<h3>web</h3>\n<p>This is a React app that uses the Anchor generated client to interact with the Solana program.</p>\n<h4>Commands</h4>\n<p>Start the web app</p>\n<pre><code class=\"language-shell\">pnpm dev\n</code></pre>\n<p>Build the web app</p>\n<pre><code class=\"language-shell\">pnpm build\n</code></pre>\n",
    "repoUrl": "https://github.com/solana-developers/solana-templates/tree/main/legacy/legacy-next-tailwind-basic"
  },
  {
    "source": {
      "name": "solana",
      "owner": "solana-developers",
      "repo": "solana-templates"
    },
    "description": "Next.js, Tailwind, @solana/web3.js, Wallet Adapter, Anchor Counter program",
    "keywords": [
      "anchor-counter",
      "legacy",
      "nextjs",
      "react",
      "solana-web3js",
      "tailwind",
      "typescript",
      "wallet-adapter"
    ],
    "name": "legacy-next-tailwind-counter",
    "path": "legacy/legacy-next-tailwind-counter",
    "readme": "<h1>legacy-next-tailwind-counter</h1>\n<p>This is a Next.js app containing:</p>\n<ul>\n<li>Tailwind CSS setup for styling</li>\n<li>Useful wallet UI elements setup using <a href=\"https://www.npmjs.com/package/@solana/web3.js\">@solana/web3.js</a></li>\n<li>A basic Counter Solana program written in Anchor</li>\n<li>UI components for interacting with the Counter program</li>\n</ul>\n<h2>Getting Started</h2>\n<h3>Installation</h3>\n<h4>Download the template</h4>\n<pre><code class=\"language-shell\">pnpm create solana-dapp@latest -t gh:solana-developers/solana-templates/legacy/legacy-next-tailwind-counter\n</code></pre>\n<h4>Install Dependencies</h4>\n<pre><code class=\"language-shell\">pnpm install\n</code></pre>\n<h2>Apps</h2>\n<h3>anchor</h3>\n<p>This is a Solana program written in Rust using the Anchor framework.</p>\n<h4>Commands</h4>\n<p>You can use any normal anchor commands. Either move to the <code>anchor</code> directory and run the <code>anchor</code> command or prefix the\ncommand with <code>pnpm</code>, eg: <code>pnpm anchor</code>.</p>\n<h4>Sync the program id:</h4>\n<p>Running this command will create a new keypair in the <code>anchor/target/deploy</code> directory and save the address to the\nAnchor config file and update the <code>declare_id!</code> macro in the <code>./src/lib.rs</code> file of the program.</p>\n<p>You will manually need to update the constant in <code>anchor/lib/counter-exports.ts</code> to match the new program id.</p>\n<pre><code class=\"language-shell\">pnpm anchor keys sync\n</code></pre>\n<h4>Build the program:</h4>\n<pre><code class=\"language-shell\">pnpm anchor-build\n</code></pre>\n<h4>Start the test validator with the program deployed:</h4>\n<pre><code class=\"language-shell\">pnpm anchor-localnet\n</code></pre>\n<h4>Run the tests</h4>\n<pre><code class=\"language-shell\">pnpm anchor-test\n</code></pre>\n<h4>Deploy to Devnet</h4>\n<pre><code class=\"language-shell\">pnpm anchor deploy --provider.cluster devnet\n</code></pre>\n<h3>web</h3>\n<p>This is a React app that uses the Anchor generated client to interact with the Solana program.</p>\n<h4>Commands</h4>\n<p>Start the web app</p>\n<pre><code class=\"language-shell\">pnpm dev\n</code></pre>\n<p>Build the web app</p>\n<pre><code class=\"language-shell\">pnpm build\n</code></pre>\n",
    "repoUrl": "https://github.com/solana-developers/solana-templates/tree/main/legacy/legacy-next-tailwind-counter"
  },
  {
    "source": {
      "name": "solana",
      "owner": "solana-developers",
      "repo": "solana-templates"
    },
    "description": "React + Vite, Tailwind, @solana/web3.js, Wallet Adapter",
    "keywords": [
      "legacy",
      "react",
      "solana-web3js",
      "tailwind",
      "typescript",
      "vite",
      "wallet-adapter"
    ],
    "name": "legacy-react-vite-tailwind",
    "path": "legacy/legacy-react-vite-tailwind",
    "readme": "<h1>legacy-react-vite-tailwind</h1>\n<p>This is a Vite app containing:</p>\n<ul>\n<li>Tailwind CSS setup for styling</li>\n<li>Useful wallet UI elements setup using <a href=\"https://www.npmjs.com/package/@solana/web3.js\">@solana/web3.js</a></li>\n</ul>\n<h2>Getting Started</h2>\n<h3>Installation</h3>\n<h4>Download the template</h4>\n<pre><code class=\"language-shell\">pnpm create solana-dapp@latest -t gh:solana-developers/solana-templates/legacy/legacy-react-vite-tailwind\n</code></pre>\n<h4>Install Dependencies</h4>\n<pre><code class=\"language-shell\">pnpm install\n</code></pre>\n<h3>Start the web app</h3>\n<pre><code class=\"language-shell\">pnpm dev\n</code></pre>\n",
    "repoUrl": "https://github.com/solana-developers/solana-templates/tree/main/legacy/legacy-react-vite-tailwind"
  },
  {
    "source": {
      "name": "solana",
      "owner": "solana-developers",
      "repo": "solana-templates"
    },
    "description": "React + Vite, Tailwind, @solana/web3.js, Wallet Adapter, basic Anchor program",
    "keywords": [
      "anchor-basic",
      "legacy",
      "react",
      "solana-web3js",
      "tailwind",
      "typescript",
      "vite",
      "wallet-adapter"
    ],
    "name": "legacy-react-vite-tailwind",
    "path": "legacy/legacy-react-vite-tailwind-basic",
    "readme": "<h1>legacy-react-vite-tailwind-basic</h1>\n<p>This is a Vite app containing:</p>\n<ul>\n<li>Tailwind CSS setup for styling</li>\n<li>Useful wallet UI elements setup using <a href=\"https://www.npmjs.com/package/@solana/web3.js\">@solana/web3.js</a></li>\n<li>A basic Greeter Solana program written in Anchor</li>\n<li>UI components for interacting with the Greeter program using the Anchor generated client</li>\n</ul>\n<h2>Getting Started</h2>\n<h3>Installation</h3>\n<h4>Download the template</h4>\n<pre><code class=\"language-shell\">pnpm create solana-dapp@latest -t gh:solana-developers/solana-templates/legacy/legacy-react-vite-tailwind-basic\n</code></pre>\n<h4>Install Dependencies</h4>\n<pre><code class=\"language-shell\">pnpm install\n</code></pre>\n<h2>Apps</h2>\n<h3>anchor</h3>\n<p>This is a Solana program written in Rust using the Anchor framework.</p>\n<h4>Commands</h4>\n<p>You can use any normal anchor commands. Either move to the <code>anchor</code> directory and run the <code>anchor</code> command or prefix the command with <code>pnpm</code>, eg: <code>pnpm anchor</code>.</p>\n<h4>Sync the program id:</h4>\n<p>Running this command will create a new keypair in the <code>anchor/target/deploy</code> directory and save the address to the Anchor config file and update the <code>declare_id!</code> macro in the <code>./src/lib.rs</code> file of the program.</p>\n<p>You will manually need to update the constant in <code>anchor/lib/counter-exports.ts</code> to match the new program id.</p>\n<pre><code class=\"language-shell\">pnpm anchor keys sync\n</code></pre>\n<h4>Build the program:</h4>\n<pre><code class=\"language-shell\">pnpm anchor-build\n</code></pre>\n<h4>Start the test validator with the program deployed:</h4>\n<pre><code class=\"language-shell\">pnpm anchor-localnet\n</code></pre>\n<h4>Run the tests</h4>\n<pre><code class=\"language-shell\">pnpm anchor-test\n</code></pre>\n<h4>Deploy to Devnet</h4>\n<pre><code class=\"language-shell\">pnpm anchor deploy --provider.cluster devnet\n</code></pre>\n<h3>web</h3>\n<p>This is a React app that uses the Anchor generated client to interact with the Solana program.</p>\n<h4>Commands</h4>\n<p>Start the web app</p>\n<pre><code class=\"language-shell\">pnpm dev\n</code></pre>\n<p>Build the web app</p>\n<pre><code class=\"language-shell\">pnpm build\n</code></pre>\n",
    "repoUrl": "https://github.com/solana-developers/solana-templates/tree/main/legacy/legacy-react-vite-tailwind-basic"
  },
  {
    "source": {
      "name": "solana",
      "owner": "solana-developers",
      "repo": "solana-templates"
    },
    "description": "React + Vite, Tailwind, @solana/web3.js, Wallet Adapter, Anchor Counter program",
    "keywords": [
      "anchor-counter",
      "legacy",
      "react",
      "solana-web3js",
      "tailwind",
      "typescript",
      "vite",
      "wallet-adapter"
    ],
    "name": "legacy-react-vite-tailwind",
    "path": "legacy/legacy-react-vite-tailwind-counter",
    "readme": "<h1>legacy-react-vite-tailwind-counter</h1>\n<p>This is a Vite app containing:</p>\n<ul>\n<li>Tailwind CSS setup for styling</li>\n<li>Useful wallet UI elements setup using <a href=\"https://www.npmjs.com/package/@solana/web3.js\">@solana/web3.js</a></li>\n<li>A basic Greeter Solana program written in Anchor</li>\n<li>UI components for interacting with the Greeter program using the Anchor generated client</li>\n</ul>\n<h2>Getting Started</h2>\n<h3>Installation</h3>\n<h4>Download the template</h4>\n<pre><code class=\"language-shell\">pnpm create solana-dapp@latest -t gh:solana-developers/solana-templates/legacy/legacy-react-vite-tailwind-counter\n</code></pre>\n<h4>Install Dependencies</h4>\n<pre><code class=\"language-shell\">pnpm install\n</code></pre>\n<h2>Apps</h2>\n<h3>anchor</h3>\n<p>This is a Solana program written in Rust using the Anchor framework.</p>\n<h4>Commands</h4>\n<p>You can use any normal anchor commands. Either move to the <code>anchor</code> directory and run the <code>anchor</code> command or prefix the command with <code>pnpm</code>, eg: <code>pnpm anchor</code>.</p>\n<h4>Sync the program id:</h4>\n<p>Running this command will create a new keypair in the <code>anchor/target/deploy</code> directory and save the address to the Anchor config file and update the <code>declare_id!</code> macro in the <code>./src/lib.rs</code> file of the program.</p>\n<p>You will manually need to update the constant in <code>anchor/lib/counter-exports.ts</code> to match the new program id.</p>\n<pre><code class=\"language-shell\">pnpm anchor keys sync\n</code></pre>\n<h4>Build the program:</h4>\n<pre><code class=\"language-shell\">pnpm anchor-build\n</code></pre>\n<h4>Start the test validator with the program deployed:</h4>\n<pre><code class=\"language-shell\">pnpm anchor-localnet\n</code></pre>\n<h4>Run the tests</h4>\n<pre><code class=\"language-shell\">pnpm anchor-test\n</code></pre>\n<h4>Deploy to Devnet</h4>\n<pre><code class=\"language-shell\">pnpm anchor deploy --provider.cluster devnet\n</code></pre>\n<h3>web</h3>\n<p>This is a React app that uses the Anchor generated client to interact with the Solana program.</p>\n<h4>Commands</h4>\n<p>Start the web app</p>\n<pre><code class=\"language-shell\">pnpm dev\n</code></pre>\n<p>Build the web app</p>\n<pre><code class=\"language-shell\">pnpm build\n</code></pre>\n",
    "repoUrl": "https://github.com/solana-developers/solana-templates/tree/main/legacy/legacy-react-vite-tailwind-counter"
  }
]
